type Mutation {
  createOrder(input: CreateOrderInput!): Order
  deleteOrder(input: DeleteOrderInput!): Order
  updateOrder(input: UpdateOrderInput!): Order
}

type Order {
  bacon: Int!
  cheese: Int!
  country: String!
  deliveryMethod: String!
  email: String!
  id: ID!
  meat: Int!
  name: String!
  salad: Int!
  street: String!
  totalPrice: Float!
  zipCode: String!
}

type OrderConnection {
  items: [Order]
  nextToken: String
}

type Query {
  getOrder(id: ID!): Order
  listOrders(after: String, first: Int): OrderConnection
}

type Subscription {
  onCreateOrder(cheese: Int, id: ID, meat: Int, salad: Int, totalPrice: Float): Order
    @aws_subscribe(mutations:["createOrder"])
  onDeleteOrder(cheese: Int, id: ID, meat: Int, salad: Int, totalPrice: Float): Order
    @aws_subscribe(mutations:["deleteOrder"])
  onUpdateOrder(cheese: Int, id: ID, meat: Int, salad: Int, totalPrice: Float): Order
    @aws_subscribe(mutations:["updateOrder"])
}

input CreateOrderInput {
  bacon: Int!
  cheese: Int!
  country: String!
  deliveryMethod: String!
  email: String!
  meat: Int!
  name: String!
  salad: Int!
  street: String!
  totalPrice: Float!
  zipCode: String!
}

input DeleteOrderInput {
  id: ID!
}

input UpdateOrderInput {
  bacon: Int
  cheese: Int
  country: String
  deliveryMethod: String
  email: String
  id: ID!
  meat: Int
  name: String
  salad: Int
  street: String
  totalPrice: Float
  zipCode: String
}
